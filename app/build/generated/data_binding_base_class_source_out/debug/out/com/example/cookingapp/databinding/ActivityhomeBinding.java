// Generated by view binder compiler. Do not edit!
package com.example.cookingapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.SearchView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.drawerlayout.widget.DrawerLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.cookingapp.R;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.google.android.material.navigation.NavigationView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityhomeBinding implements ViewBinding {
  @NonNull
  private final DrawerLayout rootView;

  @NonNull
  public final FloatingActionButton btnthemmonan;

  @NonNull
  public final DrawerLayout drawerlayout;

  @NonNull
  public final SearchView editTimkiem;

  @NonNull
  public final NavigationView navigationview;

  @NonNull
  public final RecyclerView recycleDSMADN;

  @NonNull
  public final RecyclerView recycleDSMN;

  @NonNull
  public final Toolbar toolbar;

  private ActivityhomeBinding(@NonNull DrawerLayout rootView,
      @NonNull FloatingActionButton btnthemmonan, @NonNull DrawerLayout drawerlayout,
      @NonNull SearchView editTimkiem, @NonNull NavigationView navigationview,
      @NonNull RecyclerView recycleDSMADN, @NonNull RecyclerView recycleDSMN,
      @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.btnthemmonan = btnthemmonan;
    this.drawerlayout = drawerlayout;
    this.editTimkiem = editTimkiem;
    this.navigationview = navigationview;
    this.recycleDSMADN = recycleDSMADN;
    this.recycleDSMN = recycleDSMN;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public DrawerLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityhomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityhomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activityhome, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityhomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnthemmonan;
      FloatingActionButton btnthemmonan = ViewBindings.findChildViewById(rootView, id);
      if (btnthemmonan == null) {
        break missingId;
      }

      DrawerLayout drawerlayout = (DrawerLayout) rootView;

      id = R.id.editTimkiem;
      SearchView editTimkiem = ViewBindings.findChildViewById(rootView, id);
      if (editTimkiem == null) {
        break missingId;
      }

      id = R.id.navigationview;
      NavigationView navigationview = ViewBindings.findChildViewById(rootView, id);
      if (navigationview == null) {
        break missingId;
      }

      id = R.id.recycleDSMADN;
      RecyclerView recycleDSMADN = ViewBindings.findChildViewById(rootView, id);
      if (recycleDSMADN == null) {
        break missingId;
      }

      id = R.id.recycleDSMN;
      RecyclerView recycleDSMN = ViewBindings.findChildViewById(rootView, id);
      if (recycleDSMN == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivityhomeBinding((DrawerLayout) rootView, btnthemmonan, drawerlayout,
          editTimkiem, navigationview, recycleDSMADN, recycleDSMN, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
